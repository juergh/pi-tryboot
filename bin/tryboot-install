#!/bin/bash -eu
#
# Install a tryboot entry
#

function out()
{
	local rc=${?}

	trap - EXIT INT TERM HUP

	if [ ${rc} -ne 0 ] ; then
		echo "Script failed" >&2
	fi
}

init_tbe()
{
	# Initialize the tryboot entry (TBE) directory
	rm -rf "${TBE_DIR}"
	mkdir -p "${TBE_DIR}"
}

function install_tbe_tryboot()
{
	# Copy firmware files from the package
	cp -r "${PKG_DIR}"/tryboot/* "${TBE_DIR}"
}

function install_tbe_system_default()
{
	# Nothing to install
	return
}

function install_tbe_kernel()
{
	local vmlinuz initrd

	vmlinuz=${BOOT_DIR}/vmlinuz-${ENTRY}
	initrd=${BOOT_DIR}/initrd.img-${ENTRY}

	# Copy the kernel, initrd, DTBs and overlays
	cp "${vmlinuz}" "${TBE_DIR}"/vmlinuz
	cp "${initrd}" "${TBE_DIR}"/initrd.img
	cp /lib/firmware/"${ENTRY}"/device-tree/broadcom/bcm27* "${TBE_DIR}"
	cp -r /lib/firmware/"${ENTRY}"/device-tree/overlays "${TBE_DIR}"
}

function usage()
{
	cat <<EOF
Usage: $(basename "${0}") [-h] [-r] ENTRY

Install a tryboot entry (TBE).

Positional arguments:
  ENTRY       TBE name. Must be a kernel version of an installed kernel or:
                tryboot:        Install the main tryboot TBE. When selected,
                                this entry boots into the tryboot boot menu.
                system-default: Install the system default TBE. When selected,
                                this entry boots the 'original' kernel, i.e.,
                                the system's default kernel.

Optional arguments:
  -h, --help    Show this help text and exit.
  -r, --remove  Remove the TBE.
EOF
}

remove=0
ENTRY=

while [ ${#} -ne 0 ] ; do
	case "${1}" in
		-h|--help)
			usage
			exit
			;;
		-r|--remove)
			remove=1
			;;
		*)
			if [ -n "${ENTRY}" ] ; then
				echo "Invalid argument: ${1}" >&2
				exit 2
			fi
			ENTRY=${1}
			;;
	esac
	shift
done

if [ -z "${ENTRY}" ] ; then
	usage
	exit 2
fi

PKG_DIR=/usr/lib/rpi-tryboot

BOOT_DIR=/boot
TB_DIR=/boot/firmware/tryboot
TBE_DIR=${TB_DIR}/${ENTRY}

if [ ${remove} -eq 1 ] ; then
	if [ -d "${TBE_DIR}" ] ; then
		echo "-- No such tryboot entry: ${ENTRY}" >&2
		exit 1
	fi
	echo "-- Remove tryboot entry: ${ENTRY}"
	rm -rf "${TBE_DIR}"
	exit
fi

case "${ENTRY}" in
	tryboot|system-default)
		target=${ENTRY//-/_}
		;;
	*)
		if ! [ -e "${BOOT_DIR}"/vmlinuz-"${ENTRY}" ] ; then
			echo "Invalid entry: ${ENTRY}" >&2
			exit 1
		fi
		target=kernel
		;;
esac

trap out EXIT INT TERM HUP

echo "-- Install tryboot entry: ${ENTRY}"

init_tbe
install_tbe_"${target}"

# Update the TBE's config.txt and cmdline.txt
tryboot-update "${ENTRY}"
